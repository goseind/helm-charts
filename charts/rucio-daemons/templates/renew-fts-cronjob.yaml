{{- define "rucio-daemons.renew-fts-proxy-jobspec" }}
{{- if .Values.ftsRenewal.enabled }}
  serviceAccountName: {{ .Release.Name }}-rucio-edit
  volumes:
  {{- if or (eq .Values.ftsRenewal.vo "atlas") (eq .Values.ftsRenewal.vo "dteam") }}
  - name: longproxy
    secret:
      secretName: {{ if empty .Values.ftsRenewal.longProxy.existingSecret.name }} {{ .Release.Name }}-longproxy {{- else }} {{ .Values.ftsRenewal.longProxy.existingSecret.name | quote }} {{ end }}
  {{- else }}
  - name: usercert
    secret:
      secretName: {{ if empty .Values.ftsRenewal.ftsCert.existingSecret.name }} {{ .Release.Name }}-fts-cert {{- else }} {{ .Values.ftsRenewal.ftsCert.existingSecret.name | quote }} {{ end }}
  - name: userkey
    secret:
      secretName: {{ if empty .Values.ftsRenewal.ftsKey.existingSecret.name }} {{ .Release.Name }}-fts-key {{- else }} {{ .Values.ftsRenewal.ftsKey.existingSecret.name | quote }} {{ end }}
  {{- end }}
  {{- range $key, $val := .Values.persistentVolumes }}
  - name: {{ $key }}
    persistentVolumeClaim:
      claimName: {{ $val.name }}
  {{- end}}
  containers:
    - name: renew-fts-cron
      image: "{{ .Values.ftsRenewal.image.repository }}:{{ .Values.ftsRenewal.image.tag }}"
      imagePullPolicy: {{ .Values.ftsRenewal.image.pullPolicy }}
      resources:
{{ toYaml .Values.ftsRenewal.resources | indent 8 }}
      volumeMounts:
  {{- if or (eq .Values.ftsRenewal.vo "atlas") (eq .Values.ftsRenewal.vo "dteam") }}
        - name: longproxy
          mountPath: /opt/rucio/certs/
  {{- else }}
        - name: usercert
          mountPath: /opt/rucio/certs/
        - name: userkey
          mountPath: /opt/rucio/keys/
  {{- end }}
  {{- range $key, $val := .Values.persistentVolumes }}
        - name: {{ $key }}
          mountPath: {{ $val.mountPath }}
  {{- end}}
      env:
        {{- range $key1, $val1 := .Values.optional_config }}
        - name: {{ $key1 | upper }}
          value: "{{ $val1  }}"
        {{- end}}
        - name: RUCIO_VO
          value: {{ .Values.ftsRenewal.vo | quote }}
        - name: RUCIO_FTS_VOMS
          value: {{ .Values.ftsRenewal.voms | quote }}
        - name: RUCIO_FTS_SERVERS
          value: {{ .Values.ftsRenewal.servers | quote }}
        - name: RUCIO_FTS_SECRETS
          value: "{{ .Release.Name }}-rucio-x509up"
  {{- if .Values.ftsRenewal.gridPassphrase.required }}
        - name: GRID_PASSPHRASE
          valueFrom:
            secretKeyRef:
              name: {{ .Values.ftsRenewal.gridPassphrase.existingSecret.name | quote }}
              key: {{ .Values.ftsRenewal.gridPassphrase.existingSecret.key | quote }}
  {{- end }}
  {{- if or (eq .Values.ftsRenewal.vo "atlas") (eq .Values.ftsRenewal.vo "dteam") }}
        - name: RUCIO_LONG_PROXY
          value: {{ .Values.ftsRenewal.longProxy.existingSecret.key | default "long.proxy" | quote }}
  {{- else }}
        - name: USERCERT_NAME
          value: {{ .Values.ftsRenewal.ftsCert.existingSecret.key | default "usercert.pem" | quote }}
        - name: USERKEY_NAME
          value: {{ .Values.ftsRenewal.ftsKey.existingSecret.key | default "new_userkey.pem" | quote }}
  {{- end }}
  restartPolicy: OnFailure
{{- end }}
{{- end }}

{{- if .Values.ftsRenewal.enabled -}}
---
apiVersion: {{ template "rucio.kubeApiVersion.cronjob" . }}
kind: CronJob
metadata:
  name: {{ .Release.Name }}-renew-fts-proxy
spec:
  schedule: "{{ .Values.ftsRenewal.schedule }}"
  jobTemplate:
    spec:
      template:
        spec:
          {{- include "rucio-daemons.renew-fts-proxy-jobspec" . | indent 8 }}
---
# Also run the cronjob as a one-time job on installation. To perform the first initialization of proxies
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-renew-fts-proxy-on-helm-install
  annotations:
    helm.sh/hook: post-install  # Relies on rucio service account, created by this helm chart
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  template:
    spec:
      {{- include "rucio-daemons.renew-fts-proxy-jobspec" . | indent 4 }}
{{ end }}
